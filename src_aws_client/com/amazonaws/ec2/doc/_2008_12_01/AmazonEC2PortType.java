
package com.amazonaws.ec2.doc._2008_12_01;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.4-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "AmazonEC2PortType", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AmazonEC2PortType {


    /**
     * 
     * @param imageId
     * @param requestId
     * @param imageLocation
     */
    @WebMethod(operationName = "RegisterImage", action = "RegisterImage")
    @RequestWrapper(localName = "RegisterImage", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.RegisterImageType")
    @ResponseWrapper(localName = "RegisterImageResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.RegisterImageResponseType")
    public void registerImage(
        @WebParam(name = "imageLocation", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String imageLocation,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "imageId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> imageId);

    /**
     * 
     * @param imageId
     * @param requestId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "DeregisterImage", action = "DeregisterImage")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "DeregisterImage", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeregisterImageType")
    @ResponseWrapper(localName = "DeregisterImageResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeregisterImageResponseType")
    public boolean deregisterImage(
        @WebParam(name = "imageId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String imageId,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param keyName
     * @param requestId
     * @param keyMaterial
     * @param keyFingerprint
     */
    @WebMethod(operationName = "CreateKeyPair", action = "CreateKeyPair")
    @RequestWrapper(localName = "CreateKeyPair", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CreateKeyPairType")
    @ResponseWrapper(localName = "CreateKeyPairResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CreateKeyPairResponseType")
    public void createKeyPair(
        @WebParam(name = "keyName", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> keyName,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "keyFingerprint", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> keyFingerprint,
        @WebParam(name = "keyMaterial", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> keyMaterial);

    /**
     * 
     * @param requestId
     * @param keySet0
     * @param keySet
     */
    @WebMethod(operationName = "DescribeKeyPairs", action = "DescribeKeyPairs")
    @RequestWrapper(localName = "DescribeKeyPairs", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeKeyPairsType")
    @ResponseWrapper(localName = "DescribeKeyPairsResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeKeyPairsResponseType")
    public void describeKeyPairs(
        @WebParam(name = "keySet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeKeyPairsInfoType keySet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "keySet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<DescribeKeyPairsResponseInfoType> keySet0);

    /**
     * 
     * @param keyName
     * @param requestId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "DeleteKeyPair", action = "DeleteKeyPair")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "DeleteKeyPair", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeleteKeyPairType")
    @ResponseWrapper(localName = "DeleteKeyPairResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeleteKeyPairResponseType")
    public boolean deleteKeyPair(
        @WebParam(name = "keyName", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String keyName,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param placement
     * @param blockDeviceMapping
     * @param requestId
     * @param ownerId
     * @param requesterId
     * @param reservationId
     * @param kernelId
     * @param instancesSet
     * @param minCount
     * @param userData
     * @param additionalInfo
     * @param instanceType
     * @param addressingType
     * @param imageId
     * @param keyName
     * @param ramdiskId
     * @param groupSet
     * @param maxCount
     */
    @WebMethod(operationName = "RunInstances", action = "RunInstances")
    @RequestWrapper(localName = "RunInstances", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.RunInstancesType")
    @ResponseWrapper(localName = "RunInstancesResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.RunInstancesResponseType")
    public void runInstances(
        @WebParam(name = "imageId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String imageId,
        @WebParam(name = "minCount", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        int minCount,
        @WebParam(name = "maxCount", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        int maxCount,
        @WebParam(name = "keyName", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String keyName,
        @WebParam(name = "groupSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<GroupSetType> groupSet,
        @WebParam(name = "additionalInfo", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String additionalInfo,
        @WebParam(name = "userData", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        UserDataType userData,
        @WebParam(name = "addressingType", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String addressingType,
        @WebParam(name = "instanceType", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String instanceType,
        @WebParam(name = "placement", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        PlacementRequestType placement,
        @WebParam(name = "kernelId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String kernelId,
        @WebParam(name = "ramdiskId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String ramdiskId,
        @WebParam(name = "blockDeviceMapping", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        BlockDeviceMappingType blockDeviceMapping,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "reservationId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> reservationId,
        @WebParam(name = "ownerId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> ownerId,
        @WebParam(name = "instancesSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<RunningInstancesSetType> instancesSet,
        @WebParam(name = "requesterId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requesterId);

    /**
     * 
     * @param timestamp
     * @param requestId
     * @param instanceId
     * @param output
     */
    @WebMethod(operationName = "GetConsoleOutput", action = "GetConsoleOutput")
    @RequestWrapper(localName = "GetConsoleOutput", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.GetConsoleOutputType")
    @ResponseWrapper(localName = "GetConsoleOutputResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.GetConsoleOutputResponseType")
    public void getConsoleOutput(
        @WebParam(name = "instanceId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> instanceId,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "timestamp", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<XMLGregorianCalendar> timestamp,
        @WebParam(name = "output", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> output);

    /**
     * 
     * @param requestId
     * @param instancesSet0
     * @param instancesSet
     */
    @WebMethod(operationName = "TerminateInstances", action = "TerminateInstances")
    @RequestWrapper(localName = "TerminateInstances", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.TerminateInstancesType")
    @ResponseWrapper(localName = "TerminateInstancesResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.TerminateInstancesResponseType")
    public void terminateInstances(
        @WebParam(name = "instancesSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        TerminateInstancesInfoType instancesSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "instancesSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<TerminateInstancesResponseInfoType> instancesSet0);

    /**
     * 
     * @param requestId
     * @param instancesSet
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RebootInstances", action = "RebootInstances")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "RebootInstances", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.RebootInstancesType")
    @ResponseWrapper(localName = "RebootInstancesResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.RebootInstancesResponseType")
    public boolean rebootInstances(
        @WebParam(name = "instancesSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        RebootInstancesInfoType instancesSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param requestId
     * @param reservationSet
     * @param instancesSet
     */
    @WebMethod(operationName = "DescribeInstances", action = "DescribeInstances")
    @RequestWrapper(localName = "DescribeInstances", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeInstancesType")
    @ResponseWrapper(localName = "DescribeInstancesResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeInstancesResponseType")
    public void describeInstances(
        @WebParam(name = "instancesSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeInstancesInfoType instancesSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "reservationSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<ReservationSetType> reservationSet);

    /**
     * 
     * @param imagesSet0
     * @param imagesSet
     * @param requestId
     * @param executableBySet
     * @param ownersSet
     */
    @WebMethod(operationName = "DescribeImages", action = "DescribeImages")
    @RequestWrapper(localName = "DescribeImages", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeImagesType")
    @ResponseWrapper(localName = "DescribeImagesResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeImagesResponseType")
    public void describeImages(
        @WebParam(name = "executableBySet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeImagesExecutableBySetType executableBySet,
        @WebParam(name = "imagesSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeImagesInfoType imagesSet,
        @WebParam(name = "ownersSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeImagesOwnersType ownersSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "imagesSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<DescribeImagesResponseInfoType> imagesSet0);

    /**
     * 
     * @param groupName
     * @param groupDescription
     * @param requestId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "CreateSecurityGroup", action = "CreateSecurityGroup")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "CreateSecurityGroup", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CreateSecurityGroupType")
    @ResponseWrapper(localName = "CreateSecurityGroupResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CreateSecurityGroupResponseType")
    public boolean createSecurityGroup(
        @WebParam(name = "groupName", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String groupName,
        @WebParam(name = "groupDescription", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String groupDescription,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param groupName
     * @param requestId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "DeleteSecurityGroup", action = "DeleteSecurityGroup")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "DeleteSecurityGroup", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeleteSecurityGroupType")
    @ResponseWrapper(localName = "DeleteSecurityGroupResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeleteSecurityGroupResponseType")
    public boolean deleteSecurityGroup(
        @WebParam(name = "groupName", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String groupName,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param securityGroupSet
     * @param requestId
     * @param securityGroupInfo
     */
    @WebMethod(operationName = "DescribeSecurityGroups", action = "DescribeSecurityGroups")
    @RequestWrapper(localName = "DescribeSecurityGroups", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeSecurityGroupsType")
    @ResponseWrapper(localName = "DescribeSecurityGroupsResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeSecurityGroupsResponseType")
    public void describeSecurityGroups(
        @WebParam(name = "securityGroupSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeSecurityGroupsSetType securityGroupSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "securityGroupInfo", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<SecurityGroupSetType> securityGroupInfo);

    /**
     * 
     * @param groupName
     * @param ipPermissions
     * @param requestId
     * @param userId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "AuthorizeSecurityGroupIngress", action = "AuthorizeSecurityGroupIngress")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "AuthorizeSecurityGroupIngress", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.AuthorizeSecurityGroupIngressType")
    @ResponseWrapper(localName = "AuthorizeSecurityGroupIngressResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.AuthorizeSecurityGroupIngressResponseType")
    public boolean authorizeSecurityGroupIngress(
        @WebParam(name = "userId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String userId,
        @WebParam(name = "groupName", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String groupName,
        @WebParam(name = "ipPermissions", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        IpPermissionSetType ipPermissions,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param groupName
     * @param ipPermissions
     * @param requestId
     * @param userId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RevokeSecurityGroupIngress", action = "RevokeSecurityGroupIngress")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "RevokeSecurityGroupIngress", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.RevokeSecurityGroupIngressType")
    @ResponseWrapper(localName = "RevokeSecurityGroupIngressResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.RevokeSecurityGroupIngressResponseType")
    public boolean revokeSecurityGroupIngress(
        @WebParam(name = "userId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String userId,
        @WebParam(name = "groupName", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String groupName,
        @WebParam(name = "ipPermissions", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        IpPermissionSetType ipPermissions,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param productCodes
     * @param imageId
     * @param requestId
     * @param launchPermission
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "ModifyImageAttribute", action = "ModifyImageAttribute")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "ModifyImageAttribute", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.ModifyImageAttributeType")
    @ResponseWrapper(localName = "ModifyImageAttributeResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.ModifyImageAttributeResponseType")
    public boolean modifyImageAttribute(
        @WebParam(name = "imageId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String imageId,
        @WebParam(name = "launchPermission", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        LaunchPermissionOperationType launchPermission,
        @WebParam(name = "productCodes", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        ProductCodeListType productCodes,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param imageId
     * @param requestId
     * @param launchPermission
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "ResetImageAttribute", action = "ResetImageAttribute")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "ResetImageAttribute", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.ResetImageAttributeType")
    @ResponseWrapper(localName = "ResetImageAttributeResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.ResetImageAttributeResponseType")
    public boolean resetImageAttribute(
        @WebParam(name = "imageId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String imageId,
        @WebParam(name = "launchPermission", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        EmptyElementType launchPermission,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param ramdisk0
     * @param productCodes
     * @param imageId
     * @param blockDeviceMapping
     * @param requestId
     * @param kernel0
     * @param ramdisk
     * @param productCodes0
     * @param blockDeviceMapping0
     * @param launchPermission
     * @param kernel
     * @param launchPermission0
     */
    @WebMethod(operationName = "DescribeImageAttribute", action = "DescribeImageAttribute")
    @RequestWrapper(localName = "DescribeImageAttribute", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeImageAttributeType")
    @ResponseWrapper(localName = "DescribeImageAttributeResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeImageAttributeResponseType")
    public void describeImageAttribute(
        @WebParam(name = "imageId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> imageId,
        @WebParam(name = "launchPermission", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        EmptyElementType launchPermission,
        @WebParam(name = "productCodes", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        EmptyElementType productCodes,
        @WebParam(name = "kernel", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        EmptyElementType kernel,
        @WebParam(name = "ramdisk", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        EmptyElementType ramdisk,
        @WebParam(name = "blockDeviceMapping", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        EmptyElementType blockDeviceMapping,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "launchPermission", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<LaunchPermissionListType> launchPermission0,
        @WebParam(name = "productCodes", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<ProductCodeListType> productCodes0,
        @WebParam(name = "kernel", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<NullableAttributeValueType> kernel0,
        @WebParam(name = "ramdisk", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<NullableAttributeValueType> ramdisk0,
        @WebParam(name = "blockDeviceMapping", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<BlockDeviceMappingType> blockDeviceMapping0);

    /**
     * 
     * @param requestId
     * @param productCode
     * @param ownerId
     * @param instanceId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "ConfirmProductInstance", action = "ConfirmProductInstance")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "ConfirmProductInstance", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.ConfirmProductInstanceType")
    @ResponseWrapper(localName = "ConfirmProductInstanceResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.ConfirmProductInstanceResponseType")
    public boolean confirmProductInstance(
        @WebParam(name = "productCode", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String productCode,
        @WebParam(name = "instanceId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String instanceId,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "ownerId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> ownerId);

    /**
     * 
     * @param availabilityZoneSet
     * @param availabilityZoneInfo
     * @param requestId
     */
    @WebMethod(operationName = "DescribeAvailabilityZones", action = "DescribeAvailabilityZones")
    @RequestWrapper(localName = "DescribeAvailabilityZones", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeAvailabilityZonesType")
    @ResponseWrapper(localName = "DescribeAvailabilityZonesResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeAvailabilityZonesResponseType")
    public void describeAvailabilityZones(
        @WebParam(name = "availabilityZoneSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeAvailabilityZonesSetType availabilityZoneSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "availabilityZoneInfo", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<AvailabilityZoneSetType> availabilityZoneInfo);

    /**
     * 
     * @param requestId
     * @param publicIp
     */
    @WebMethod(operationName = "AllocateAddress", action = "AllocateAddress")
    @RequestWrapper(localName = "AllocateAddress", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.AllocateAddressType")
    @ResponseWrapper(localName = "AllocateAddressResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.AllocateAddressResponseType")
    public void allocateAddress(
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "publicIp", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> publicIp);

    /**
     * 
     * @param requestId
     * @param publicIp
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "ReleaseAddress", action = "ReleaseAddress")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "ReleaseAddress", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.ReleaseAddressType")
    @ResponseWrapper(localName = "ReleaseAddressResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.ReleaseAddressResponseType")
    public boolean releaseAddress(
        @WebParam(name = "publicIp", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String publicIp,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param addressesSet
     * @param requestId
     * @param publicIpsSet
     */
    @WebMethod(operationName = "DescribeAddresses", action = "DescribeAddresses")
    @RequestWrapper(localName = "DescribeAddresses", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeAddressesType")
    @ResponseWrapper(localName = "DescribeAddressesResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeAddressesResponseType")
    public void describeAddresses(
        @WebParam(name = "publicIpsSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeAddressesInfoType publicIpsSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "addressesSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<DescribeAddressesResponseInfoType> addressesSet);

    /**
     * 
     * @param requestId
     * @param instanceId
     * @param publicIp
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "AssociateAddress", action = "AssociateAddress")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "AssociateAddress", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.AssociateAddressType")
    @ResponseWrapper(localName = "AssociateAddressResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.AssociateAddressResponseType")
    public boolean associateAddress(
        @WebParam(name = "publicIp", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String publicIp,
        @WebParam(name = "instanceId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String instanceId,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param requestId
     * @param publicIp
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "DisassociateAddress", action = "DisassociateAddress")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "DisassociateAddress", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DisassociateAddressType")
    @ResponseWrapper(localName = "DisassociateAddressResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DisassociateAddressResponseType")
    public boolean disassociateAddress(
        @WebParam(name = "publicIp", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String publicIp,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param snapshotId
     * @param createTime
     * @param volumeId
     * @param status
     * @param requestId
     * @param availabilityZone
     * @param size
     */
    @WebMethod(operationName = "CreateVolume", action = "CreateVolume")
    @RequestWrapper(localName = "CreateVolume", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CreateVolumeType")
    @ResponseWrapper(localName = "CreateVolumeResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CreateVolumeResponseType")
    public void createVolume(
        @WebParam(name = "size", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> size,
        @WebParam(name = "snapshotId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> snapshotId,
        @WebParam(name = "availabilityZone", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> availabilityZone,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "volumeId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> volumeId,
        @WebParam(name = "status", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "createTime", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<XMLGregorianCalendar> createTime);

    /**
     * 
     * @param volumeId
     * @param requestId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "DeleteVolume", action = "DeleteVolume")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "DeleteVolume", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeleteVolumeType")
    @ResponseWrapper(localName = "DeleteVolumeResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeleteVolumeResponseType")
    public boolean deleteVolume(
        @WebParam(name = "volumeId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String volumeId,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param volumeSet
     * @param requestId
     * @param volumeSet0
     */
    @WebMethod(operationName = "DescribeVolumes", action = "DescribeVolumes")
    @RequestWrapper(localName = "DescribeVolumes", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeVolumesType")
    @ResponseWrapper(localName = "DescribeVolumesResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeVolumesResponseType")
    public void describeVolumes(
        @WebParam(name = "volumeSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeVolumesSetType volumeSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "volumeSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<DescribeVolumesSetResponseType> volumeSet0);

    /**
     * 
     * @param volumeId
     * @param status
     * @param requestId
     * @param attachTime
     * @param device
     * @param instanceId
     */
    @WebMethod(operationName = "AttachVolume", action = "AttachVolume")
    @RequestWrapper(localName = "AttachVolume", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.AttachVolumeType")
    @ResponseWrapper(localName = "AttachVolumeResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.AttachVolumeResponseType")
    public void attachVolume(
        @WebParam(name = "volumeId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> volumeId,
        @WebParam(name = "instanceId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> instanceId,
        @WebParam(name = "device", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> device,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "status", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "attachTime", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<XMLGregorianCalendar> attachTime);

    /**
     * 
     * @param volumeId
     * @param status
     * @param requestId
     * @param attachTime
     * @param device
     * @param instanceId
     * @param force
     */
    @WebMethod(operationName = "DetachVolume", action = "DetachVolume")
    @RequestWrapper(localName = "DetachVolume", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DetachVolumeType")
    @ResponseWrapper(localName = "DetachVolumeResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DetachVolumeResponseType")
    public void detachVolume(
        @WebParam(name = "volumeId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> volumeId,
        @WebParam(name = "instanceId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> instanceId,
        @WebParam(name = "device", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> device,
        @WebParam(name = "force", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        Boolean force,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "status", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "attachTime", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<XMLGregorianCalendar> attachTime);

    /**
     * 
     * @param progress
     * @param startTime
     * @param snapshotId
     * @param volumeId
     * @param status
     * @param requestId
     */
    @WebMethod(operationName = "CreateSnapshot", action = "CreateSnapshot")
    @RequestWrapper(localName = "CreateSnapshot", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CreateSnapshotType")
    @ResponseWrapper(localName = "CreateSnapshotResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CreateSnapshotResponseType")
    public void createSnapshot(
        @WebParam(name = "volumeId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.INOUT)
        Holder<String> volumeId,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "snapshotId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> snapshotId,
        @WebParam(name = "status", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> status,
        @WebParam(name = "startTime", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<XMLGregorianCalendar> startTime,
        @WebParam(name = "progress", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> progress);

    /**
     * 
     * @param snapshotId
     * @param requestId
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "DeleteSnapshot", action = "DeleteSnapshot")
    @WebResult(targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
    @RequestWrapper(localName = "DeleteSnapshot", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeleteSnapshotType")
    @ResponseWrapper(localName = "DeleteSnapshotResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DeleteSnapshotResponseType")
    public boolean deleteSnapshot(
        @WebParam(name = "snapshotId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String snapshotId,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId);

    /**
     * 
     * @param snapshotSet
     * @param requestId
     * @param snapshotSet0
     */
    @WebMethod(operationName = "DescribeSnapshots", action = "DescribeSnapshots")
    @RequestWrapper(localName = "DescribeSnapshots", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeSnapshotsType")
    @ResponseWrapper(localName = "DescribeSnapshotsResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeSnapshotsResponseType")
    public void describeSnapshots(
        @WebParam(name = "snapshotSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeSnapshotsSetType snapshotSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "snapshotSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<DescribeSnapshotsSetResponseType> snapshotSet0);

    /**
     * 
     * @param bundleInstanceTask
     * @param requestId
     * @param instanceId
     * @param storage
     */
    @WebMethod(operationName = "BundleInstance", action = "BundleInstance")
    @RequestWrapper(localName = "BundleInstance", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.BundleInstanceType")
    @ResponseWrapper(localName = "BundleInstanceResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.BundleInstanceResponseType")
    public void bundleInstance(
        @WebParam(name = "instanceId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String instanceId,
        @WebParam(name = "storage", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        BundleInstanceTaskStorageType storage,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "bundleInstanceTask", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<BundleInstanceTaskType> bundleInstanceTask);

    /**
     * 
     * @param bundlesSet
     * @param requestId
     * @param bundleInstanceTasksSet
     */
    @WebMethod(operationName = "DescribeBundleTasks", action = "DescribeBundleTasks")
    @RequestWrapper(localName = "DescribeBundleTasks", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeBundleTasksType")
    @ResponseWrapper(localName = "DescribeBundleTasksResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeBundleTasksResponseType")
    public void describeBundleTasks(
        @WebParam(name = "bundlesSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeBundleTasksInfoType bundlesSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "bundleInstanceTasksSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<BundleInstanceTasksSetType> bundleInstanceTasksSet);

    /**
     * 
     * @param bundleInstanceTask
     * @param requestId
     * @param bundleId
     */
    @WebMethod(operationName = "CancelBundleTask", action = "CancelBundleTask")
    @RequestWrapper(localName = "CancelBundleTask", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CancelBundleTaskType")
    @ResponseWrapper(localName = "CancelBundleTaskResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.CancelBundleTaskResponseType")
    public void cancelBundleTask(
        @WebParam(name = "bundleId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        String bundleId,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "bundleInstanceTask", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<BundleInstanceTaskType> bundleInstanceTask);

    /**
     * 
     * @param regionInfo
     * @param requestId
     * @param regionSet
     */
    @WebMethod(operationName = "DescribeRegions", action = "DescribeRegions")
    @RequestWrapper(localName = "DescribeRegions", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeRegionsType")
    @ResponseWrapper(localName = "DescribeRegionsResponse", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", className = "com.amazonaws.ec2.doc._2008_12_01.DescribeRegionsResponseType")
    public void describeRegions(
        @WebParam(name = "regionSet", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/")
        DescribeRegionsSetType regionSet,
        @WebParam(name = "requestId", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<String> requestId,
        @WebParam(name = "regionInfo", targetNamespace = "http://ec2.amazonaws.com/doc/2008-12-01/", mode = WebParam.Mode.OUT)
        Holder<RegionSetType> regionInfo);

}
